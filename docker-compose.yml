version: '3.3'

services:
  reverse-proxy:
    # The official v2 Traefik docker image
    image: traefik:v2.3
    # Enables the web UI and tells Traefik to listen to docker
    command:
      # Enable the Dashboard and API in insecure mode for local development
      - --api.insecure=true
      # Enable Docker in Traefik, so that it reads labels from Docker services
      - --providers.docker
      # Enable the access log, with HTTP requests
      - --accesslog
      # Enable the Traefik log, for configurations and errors
      - --log
    ports:
      # The HTTP port
      - "80:80"
      # The Web UI (enabled by --api.insecure=true)
      - "8080:8080"
    volumes:
      # So that Traefik can listen to the Docker events
      - /var/run/docker.sock:/var/run/docker.sock

  server:
    build:
      context: ./server
      dockerfile: $PWD/server/Dockerfile
    volumes:
      - ./server/app:/app/app
      - ./server/alembic.ini:/app/alembic.ini
      - ./server/init_db.py:/app/init_db.py
    ports:
      - "8888:80"
    depends_on:
      - db
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=app
      - POSTGRES_SERVER=db
      - DEBUG=1
    command: uvicorn app:app --host 0.0.0.0 --port 80 --debug
    labels:
      - "traefik.http.routers.api-server-http.rule=Host(`api.andreslist.com`)"

  db:
    image: postgres:11
    restart: unless-stopped
    volumes:
      - db:/data/db
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=app

  client:
    build:
      context: ./client
      dockerfile: $PWD/client/Dockerfile
    stdin_open: true
    ports:
      - "3000:3000"
    volumes:
      - ./client:/app
      - ./client/node_modules:/app/node_modules
    environment:
      - CHOKIDAR_USEPOLLING=true
    command: npm start
    labels:
      - "traefik.http.routers.client.rule=Host(`andreslist.com`)"

volumes:
  db:
